version: '3.7'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
    
services:
  server:
    container_name: scanmeds-api
    hostname: scanmeds-api
    build: 
      context: ./server
      dockerfile: Dockerfile
    image: scanmeds-api:1.0.0
    restart: on-failure
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - frontend
      - backend
    environment:
      - ENV=development
    depends_on:
      - database
    command: npm run dev

  database:
    container_name: scanmeds-database
    hostname: scanmeds-database
    image: mongo:3.6
    restart: on-failure
    volumes:
      - ./data/db:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend
    environment:
      MONGO_INITDB_DATABASE: scanmeds
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password

  front:
    container_name: scanmeds-front
    hostname: scanmeds-front
    build: 
      context: ./front
      dockerfile: Dockerfile
    image: scanmeds-front:1.0.0
    restart: on-failure
    volumes:
      - ./front:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8080:8080"
    networks:
      - frontend
    environment:
      - ENV=development
    depends_on:
      - server
    command: npm run serve

  proxy:
    container_name: scanmeds-proxy
    hostname: scanmeds-proxy
    build: 
      context: ./proxy
      dockerfile: Dockerfile
    image: scanmeds-proxy:1.0.0
    restart: on-failure
    volumes:
      - ./proxy:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3000"
    networks:
      - frontend
    command: npm run start
      